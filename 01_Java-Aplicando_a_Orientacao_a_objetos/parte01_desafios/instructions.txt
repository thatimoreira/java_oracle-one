BRAZILIAN PORTUGUESE:
" Na programação orientada a objetos, conceitos fundamentais como classe, métodos, atributos e instanciação
  desempenham papéis cruciais na organização e estruturação do código.

  Compreender esses conceitos é fundamental para a programação orientada a objetos, pois proporciona uma estrutura
  organizada, modular e reutilizável ao código. Para aprimorar essas habilidades, criamos uma lista de atividades
  (não obrigatórias) focada na prática para melhorar ainda mais sua experiência de aprendizagem. Vamos praticar?
  
  1- Crie uma classe Pessoa com um método que exibe "Olá, mundo!" no console.

  2- Crie uma classe Calculadora com um método que recebe um número como parâmetro e retorna o dobro desse número.

  3- Crie uma classe Musica com atributos titulo, artista, anoLancamento, avaliacao e numAvaliacoes, e métodos para
     exibir a ficha técnica, avaliar a música e calcular a média de avaliações.

  4- Crie uma classe Carro com atributos modelo, ano, cor e métodos para exibir a ficha técnica e calcular a idade do
     carro.

  5- Crie uma classe Aluno com atributos nome, idade, e um método para exibir informações. Crie uma instância da classe
     Aluno, atribua valores aos seus atributos e utilize o método para exibir as informações."

ENGLISH version:
" In object-oriented programming, fundamental concepts like class, methods, attributes, and instantiation
  play crucial roles in organizing and structuring code.

  Understanding these concepts is essential for object-oriented programming, as it provides an organized, modular,
  and reusable structure to the code. To enhance these skills, we have created a list of activities (not mandatory)
  focused on practice to further improve your learning experience. Let's practice!
  
  1- Create a Person class with a method that displays "Hello, world!" on the console.

  2- Create a Calculator class with a method that receives a number as a parameter and returns double that number.

  3- Create a Music class with attributes title, artist, releaseYear, rating, and numRatings, and methods to display
     the technical sheet, rate the music, and calculate the average rating.

  4- Create a Car class with attributes model, year, color, and methods to display the technical sheet and calculate
     the car's age.

  5- Create a Student class with attributes name, age, and a method to display information. Create an instance of the
     Student class, assign values to its attributes, and use the method to display the information."